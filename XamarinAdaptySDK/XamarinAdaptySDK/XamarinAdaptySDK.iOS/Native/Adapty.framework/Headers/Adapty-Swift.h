// Generated by Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef ADAPTY_SWIFT_H
#define ADAPTY_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AppTrackingTransparency;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Adapty",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSString;
@class NSNumber;
@class NSDate;

SWIFT_CLASS("_TtC6Adapty20AccessLevelInfoModel")
@interface AccessLevelInfoModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic) BOOL isActive;
@property (nonatomic, copy) NSString * _Nonnull vendorProductId;
@property (nonatomic, copy) NSString * _Nonnull store;
@property (nonatomic, copy) NSDate * _Nullable activatedAt;
@property (nonatomic, copy) NSDate * _Nullable renewedAt;
@property (nonatomic, copy) NSDate * _Nullable expiresAt;
@property (nonatomic) BOOL isLifetime;
@property (nonatomic, copy) NSString * _Nullable activeIntroductoryOfferType;
@property (nonatomic, copy) NSString * _Nullable activePromotionalOfferType;
@property (nonatomic) BOOL willRenew;
@property (nonatomic) BOOL isInGracePeriod;
@property (nonatomic, copy) NSDate * _Nullable unsubscribedAt;
@property (nonatomic, copy) NSDate * _Nullable billingIssueDetectedAt;
@property (nonatomic, copy) NSString * _Nullable vendorTransactionId;
@property (nonatomic, copy) NSString * _Nullable vendorOriginalTransactionId;
@property (nonatomic, copy) NSDate * _Nullable startsAt;
@property (nonatomic, copy) NSString * _Nullable cancellationReason;
@property (nonatomic) BOOL isRefund;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface AccessLevelInfoModel (SWIFT_EXTENSION(Adapty))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

@protocol AdaptyDelegate;
enum AdaptyLogLevel : NSInteger;
@class AdaptyError;
@class ProfileParameterBuilder;
enum AttributionNetwork : NSUInteger;
@class PaywallModel;
@class ProductModel;
@class PurchaserInfoModel;
@class NSData;
@class PromoModel;
@class UIViewController;
@protocol AdaptyVisualPaywallDelegate;
@class PaywallViewController;

SWIFT_CLASS("_TtC6Adapty6Adapty")
@interface Adapty : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, weak) id <AdaptyDelegate> _Nullable delegate;)
+ (id <AdaptyDelegate> _Nullable)delegate SWIFT_WARN_UNUSED_RESULT;
+ (void)setDelegate:(id <AdaptyDelegate> _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) enum AdaptyLogLevel logLevel;)
+ (enum AdaptyLogLevel)logLevel SWIFT_WARN_UNUSED_RESULT;
+ (void)setLogLevel:(enum AdaptyLogLevel)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL idfaCollectionDisabled;)
+ (BOOL)idfaCollectionDisabled SWIFT_WARN_UNUSED_RESULT;
+ (void)setIdfaCollectionDisabled:(BOOL)value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (void)activate:(NSString * _Nonnull)apiKey;
+ (void)activate:(NSString * _Nonnull)apiKey observerMode:(BOOL)observerMode;
+ (void)activate:(NSString * _Nonnull)apiKey customerUserId:(NSString * _Nullable)customerUserId;
+ (void)activate:(NSString * _Nonnull)apiKey observerMode:(BOOL)observerMode customerUserId:(NSString * _Nullable)customerUserId;
+ (void)identify:(NSString * _Nonnull)customerUserId completion:(void (^ _Nullable)(AdaptyError * _Nullable))completion;
+ (void)updateProfileWithParams:(ProfileParameterBuilder * _Nonnull)params completion:(void (^ _Nullable)(AdaptyError * _Nullable))completion;
+ (void)updateAttribution:(NSDictionary * _Nonnull)attribution source:(enum AttributionNetwork)source networkUserId:(NSString * _Nullable)networkUserId completion:(void (^ _Nullable)(AdaptyError * _Nullable))completion;
+ (void)getPaywallsWithForceUpdate:(BOOL)forceUpdate :(void (^ _Nonnull)(NSArray<PaywallModel *> * _Nullable, NSArray<ProductModel *> * _Nullable, AdaptyError * _Nullable))completion;
+ (void)makePurchaseWithProduct:(ProductModel * _Nonnull)product offerId:(NSString * _Nullable)offerId completion:(void (^ _Nonnull)(PurchaserInfoModel * _Nullable, NSString * _Nullable, NSDictionary<NSString *, id> * _Nullable, ProductModel * _Nullable, AdaptyError * _Nullable))completion;
+ (void)restorePurchasesWithCompletion:(void (^ _Nonnull)(PurchaserInfoModel * _Nullable, NSString * _Nullable, NSDictionary<NSString *, id> * _Nullable, AdaptyError * _Nullable))completion;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSData * _Nullable apnsToken;)
+ (NSData * _Nullable)apnsToken SWIFT_WARN_UNUSED_RESULT;
+ (void)setApnsToken:(NSData * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable apnsTokenString;)
+ (NSString * _Nullable)apnsTokenString SWIFT_WARN_UNUSED_RESULT;
+ (void)setApnsTokenString:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nullable customerUserId;)
+ (NSString * _Nullable)customerUserId SWIFT_WARN_UNUSED_RESULT;
+ (void)getPurchaserInfoWithForceUpdate:(BOOL)forceUpdate :(void (^ _Nonnull)(PurchaserInfoModel * _Nullable, AdaptyError * _Nullable))completion;
+ (void)getPromo:(void (^ _Nullable)(PromoModel * _Nullable, AdaptyError * _Nullable))completion;
+ (void)handlePushNotification:(NSDictionary * _Nonnull)userInfo completion:(void (^ _Nonnull)(AdaptyError * _Nullable))completion;
+ (PaywallViewController * _Nonnull)showVisualPaywallFor:(PaywallModel * _Nonnull)paywall from:(UIViewController * _Nonnull)viewController delegate:(id <AdaptyVisualPaywallDelegate> _Nonnull)delegate;
+ (PaywallViewController * _Nonnull)getVisualPaywallFor:(PaywallModel * _Nonnull)paywall delegate:(id <AdaptyVisualPaywallDelegate> _Nonnull)delegate SWIFT_WARN_UNUSED_RESULT;
+ (void)closeVisualPaywall:(PaywallViewController * _Nullable)paywall;
+ (void)setFallbackPaywalls:(NSString * _Nonnull)paywalls completion:(void (^ _Nullable)(AdaptyError * _Nullable))completion;
+ (void)logShowPaywall:(PaywallModel * _Nonnull)paywall completion:(void (^ _Nullable)(AdaptyError * _Nullable))completion;
+ (void)setExternalAnalyticsEnabled:(BOOL)enabled completion:(void (^ _Nullable)(AdaptyError * _Nullable))completion;
+ (void)setVariationId:(NSString * _Nonnull)variationId forTransactionId:(NSString * _Nonnull)transactionId completion:(void (^ _Nullable)(AdaptyError * _Nullable))completion;
+ (void)presentCodeRedemptionSheet;
+ (void)logout:(void (^ _Nullable)(AdaptyError * _Nullable))completion;
@end



SWIFT_PROTOCOL("_TtP6Adapty14AdaptyDelegate_")
@protocol AdaptyDelegate
- (void)didReceiveUpdatedPurchaserInfo:(PurchaserInfoModel * _Nonnull)purchaserInfo;
- (void)didReceivePromo:(PromoModel * _Nonnull)promo;
@optional
- (void)paymentQueueWithShouldAddStorePaymentFor:(ProductModel * _Nonnull)product defermentCompletion:(void (^ _Nonnull)(void (^ _Nullable)(PurchaserInfoModel * _Nullable, NSString * _Nullable, NSDictionary<NSString *, id> * _Nullable, ProductModel * _Nullable, AdaptyError * _Nullable)))makeDeferredPurchase;
- (void)didReceivePaywallsForConfigWithPaywalls:(NSArray<PaywallModel *> * _Nonnull)paywalls;
@end

enum AdaptyErrorCode : NSInteger;
@class NSCoder;

SWIFT_CLASS("_TtC6Adapty11AdaptyError")
@interface AdaptyError : NSError
@property (nonatomic) NSError * _Nullable originalError;
@property (nonatomic) enum AdaptyErrorCode adaptyErrorCode;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithDomain:(NSString * _Nonnull)domain code:(NSInteger)code userInfo:(NSDictionary<NSString *, id> * _Nullable)dict SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, AdaptyErrorCode, closed) {
  AdaptyErrorCodeNone = -1,
  AdaptyErrorCodeUnknown = 0,
  AdaptyErrorCodeClientInvalid = 1,
  AdaptyErrorCodePaymentCancelled = 2,
  AdaptyErrorCodePaymentInvalid = 3,
  AdaptyErrorCodePaymentNotAllowed = 4,
  AdaptyErrorCodeStoreProductNotAvailable = 5,
  AdaptyErrorCodeCloudServicePermissionDenied = 6,
  AdaptyErrorCodeCloudServiceNetworkConnectionFailed = 7,
  AdaptyErrorCodeCloudServiceRevoked = 8,
  AdaptyErrorCodePrivacyAcknowledgementRequired = 9,
  AdaptyErrorCodeUnauthorizedRequestData = 10,
  AdaptyErrorCodeInvalidOfferIdentifier = 11,
  AdaptyErrorCodeInvalidSignature = 12,
  AdaptyErrorCodeMissingOfferParams = 13,
  AdaptyErrorCodeInvalidOfferPrice = 14,
  AdaptyErrorCodeNoProductIDsFound = 1000,
  AdaptyErrorCodeNoProductsFound = 1001,
  AdaptyErrorCodeProductRequestFailed = 1002,
  AdaptyErrorCodeCantMakePayments = 1003,
  AdaptyErrorCodeNoPurchasesToRestore = 1004,
  AdaptyErrorCodeCantReadReceipt = 1005,
  AdaptyErrorCodeProductPurchaseFailed = 1006,
  AdaptyErrorCodeMissingOfferSigningParams = 1007,
  AdaptyErrorCodeFallbackPaywallsNotRequired = 1008,
  AdaptyErrorCodeEmptyResponse = 2000,
  AdaptyErrorCodeEmptyData = 2001,
  AdaptyErrorCodeAuthenticationError = 2002,
  AdaptyErrorCodeBadRequest = 2003,
  AdaptyErrorCodeServerError = 2004,
  AdaptyErrorCodeFailed = 2005,
  AdaptyErrorCodeUnableToDecode = 2006,
  AdaptyErrorCodeMissingParam = 2007,
  AdaptyErrorCodeInvalidProperty = 2008,
  AdaptyErrorCodeEncodingFailed = 2009,
  AdaptyErrorCodeMissingURL = 2010,
  AdaptyErrorCodeAnalyticsDisabled = 3000,
};

typedef SWIFT_ENUM(NSInteger, AdaptyLogLevel, closed) {
  AdaptyLogLevelNone = 0,
  AdaptyLogLevelErrors = 1,
  AdaptyLogLevelVerbose = 2,
  AdaptyLogLevelAll = 3,
};


SWIFT_PROTOCOL("_TtP6Adapty27AdaptyVisualPaywallDelegate_")
@protocol AdaptyVisualPaywallDelegate
- (void)didPurchaseWithProduct:(ProductModel * _Nonnull)product purchaserInfo:(PurchaserInfoModel * _Nullable)purchaserInfo receipt:(NSString * _Nullable)receipt appleValidationResult:(NSDictionary<NSString *, id> * _Nullable)appleValidationResult paywall:(PaywallViewController * _Nonnull)paywall;
- (void)didFailPurchaseWithProduct:(ProductModel * _Nonnull)product error:(AdaptyError * _Nonnull)error paywall:(PaywallViewController * _Nonnull)paywall;
- (void)didCancelWithPaywall:(PaywallViewController * _Nonnull)paywall;
- (void)didRestoreWithPurchaserInfo:(PurchaserInfoModel * _Nullable)purchaserInfo receipt:(NSString * _Nullable)receipt appleValidationResult:(NSDictionary<NSString *, id> * _Nullable)appleValidationResult error:(AdaptyError * _Nullable)error paywall:(PaywallViewController * _Nonnull)paywall;
@end

typedef SWIFT_ENUM(NSUInteger, AttributionNetwork, closed) {
  AttributionNetworkAdjust = 0,
  AttributionNetworkAppsflyer = 1,
  AttributionNetworkBranch = 2,
  AttributionNetworkAppleSearchAds = 3,
  AttributionNetworkCustom = 4,
};

typedef SWIFT_ENUM(NSInteger, DataState, closed) {
  DataStateCached = 0,
  DataStateSynced = 1,
};


typedef SWIFT_ENUM(NSInteger, Gender, closed) {
  GenderFemale = 0,
  GenderMale = 1,
  GenderOther = 2,
};




SWIFT_CLASS("_TtC6Adapty24NonSubscriptionInfoModel")
@interface NonSubscriptionInfoModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull purchaseId;
@property (nonatomic, copy) NSString * _Nonnull vendorProductId;
@property (nonatomic, copy) NSString * _Nonnull store;
@property (nonatomic, copy) NSDate * _Nullable purchasedAt;
@property (nonatomic) BOOL isOneTime;
@property (nonatomic) BOOL isSandbox;
@property (nonatomic, copy) NSString * _Nullable vendorTransactionId;
@property (nonatomic, copy) NSString * _Nullable vendorOriginalTransactionId;
@property (nonatomic) BOOL isRefund;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface NonSubscriptionInfoModel (SWIFT_EXTENSION(Adapty))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC6Adapty12PaywallModel")
@interface PaywallModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull developerId;
@property (nonatomic, copy) NSString * _Nonnull variationId;
@property (nonatomic) NSInteger revision;
@property (nonatomic) BOOL isPromo;
@property (nonatomic, copy) NSArray<ProductModel *> * _Nonnull products;
@property (nonatomic, copy) NSString * _Nullable visualPaywall;
@property (nonatomic, copy) NSString * _Nullable customPayloadString;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable customPayload;
@property (nonatomic, copy) NSString * _Nullable abTestName;
@property (nonatomic, copy) NSString * _Nullable name;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface PaywallModel (SWIFT_EXTENSION(Adapty))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

@class NSBundle;

SWIFT_CLASS("_TtC6Adapty21PaywallViewController")
@interface PaywallViewController : UIViewController
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class WKWebView;
@class WKNavigationAction;

@interface PaywallViewController (SWIFT_EXTENSION(Adapty)) <WKNavigationDelegate>
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
@end

@class ProductSubscriptionPeriodModel;
enum PaymentMode : NSUInteger;

SWIFT_CLASS("_TtC6Adapty20ProductDiscountModel")
@interface ProductDiscountModel : NSObject
@property (nonatomic) NSDecimal price;
@property (nonatomic, copy) NSString * _Nullable identifier;
@property (nonatomic, strong) ProductSubscriptionPeriodModel * _Nonnull subscriptionPeriod;
@property (nonatomic) NSInteger numberOfPeriods;
@property (nonatomic) enum PaymentMode paymentMode;
@property (nonatomic, copy) NSString * _Nullable localizedPrice;
@property (nonatomic, copy) NSString * _Nullable localizedSubscriptionPeriod;
@property (nonatomic, copy) NSString * _Nullable localizedNumberOfPeriods;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSUInteger, PaymentMode, closed) {
  PaymentModePayAsYouGo = 0,
  PaymentModePayUpFront = 1,
  PaymentModeFreeTrial = 2,
  PaymentModeUnknown = 3,
};


@interface ProductDiscountModel (SWIFT_EXTENSION(Adapty))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

@class SKProduct;

SWIFT_CLASS("_TtC6Adapty12ProductModel")
@interface ProductModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull vendorProductId;
@property (nonatomic) BOOL introductoryOfferEligibility;
@property (nonatomic) BOOL promotionalOfferEligibility;
@property (nonatomic, copy) NSString * _Nullable promotionalOfferId;
@property (nonatomic, copy) NSString * _Nullable paywallABTestName;
@property (nonatomic, copy) NSString * _Nullable paywallName;
@property (nonatomic, copy) NSString * _Nonnull localizedDescription;
@property (nonatomic, copy) NSString * _Nonnull localizedTitle;
@property (nonatomic) NSDecimal price;
@property (nonatomic, copy) NSString * _Nullable currencyCode;
@property (nonatomic, copy) NSString * _Nullable currencySymbol;
@property (nonatomic, copy) NSString * _Nullable regionCode;
@property (nonatomic) BOOL isFamilyShareable;
@property (nonatomic, strong) ProductSubscriptionPeriodModel * _Nullable subscriptionPeriod;
@property (nonatomic, strong) ProductDiscountModel * _Nullable introductoryDiscount;
@property (nonatomic, copy) NSString * _Nullable subscriptionGroupIdentifier;
@property (nonatomic, copy) NSArray<ProductDiscountModel *> * _Nonnull discounts;
@property (nonatomic, copy) NSString * _Nullable localizedPrice;
@property (nonatomic, copy) NSString * _Nullable localizedSubscriptionPeriod;
@property (nonatomic, strong) SKProduct * _Nullable skProduct;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSUInteger, PeriodUnit, closed) {
  PeriodUnitDay = 0,
  PeriodUnitWeek = 1,
  PeriodUnitMonth = 2,
  PeriodUnitYear = 3,
  PeriodUnitUnknown = 4,
};


@interface ProductModel (SWIFT_EXTENSION(Adapty))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC6Adapty30ProductSubscriptionPeriodModel")
@interface ProductSubscriptionPeriodModel : NSObject
@property (nonatomic) enum PeriodUnit unit;
@property (nonatomic) NSInteger numberOfUnits;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface ProductSubscriptionPeriodModel (SWIFT_EXTENSION(Adapty))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC6Adapty23ProfileParameterBuilder")
@interface ProfileParameterBuilder : NSObject
- (nonnull instancetype)withEmail:(NSString * _Nonnull)email SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)withPhoneNumber:(NSString * _Nonnull)phoneNumber SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)withFacebookUserId:(NSString * _Nonnull)facebookUserId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)withFacebookAnonymousId:(NSString * _Nonnull)facebookAnonymousId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)withAmplitudeUserId:(NSString * _Nonnull)amplitudeUserId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)withAmplitudeDeviceId:(NSString * _Nonnull)amplitudeDeviceId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)withMixpanelUserId:(NSString * _Nonnull)mixpanelUserId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)withAppmetricaProfileId:(NSString * _Nonnull)appmetricaProfileId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)withAppmetricaDeviceId:(NSString * _Nonnull)appmetricaDeviceId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)withFirstName:(NSString * _Nonnull)firstName SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)withLastName:(NSString * _Nonnull)lastName SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)withGender:(enum Gender)gender SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)withBirthday:(NSDate * _Nonnull)birthday SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)withCustomAttributes:(NSDictionary<NSString *, id> * _Nonnull)customAttributes SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)withAppTrackingTransparencyStatus:(enum ATTrackingManagerAuthorizationStatus)appTrackingTransparencyStatus SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(macos,introduced=11.0) SWIFT_AVAILABILITY(ios,introduced=14);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6Adapty10PromoModel")
@interface PromoModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull promoType;
@property (nonatomic, copy) NSString * _Nonnull variationId;
@property (nonatomic, copy) NSDate * _Nullable expiresAt;
@property (nonatomic, strong) PaywallModel * _Nullable paywall;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface PromoModel (SWIFT_EXTENSION(Adapty))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

@class SubscriptionInfoModel;

SWIFT_CLASS("_TtC6Adapty18PurchaserInfoModel")
@interface PurchaserInfoModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull profileId;
@property (nonatomic, copy) NSString * _Nullable customerUserId;
@property (nonatomic, copy) NSDictionary<NSString *, AccessLevelInfoModel *> * _Nonnull accessLevels;
@property (nonatomic, copy) NSDictionary<NSString *, SubscriptionInfoModel *> * _Nonnull subscriptions;
@property (nonatomic, copy) NSDictionary<NSString *, NSArray<NonSubscriptionInfoModel *> *> * _Nonnull nonSubscriptions;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface PurchaserInfoModel (SWIFT_EXTENSION(Adapty))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end




SWIFT_CLASS("_TtC6Adapty21SubscriptionInfoModel")
@interface SubscriptionInfoModel : NSObject
@property (nonatomic) BOOL isActive;
@property (nonatomic, copy) NSString * _Nonnull vendorProductId;
@property (nonatomic, copy) NSString * _Nonnull store;
@property (nonatomic, copy) NSDate * _Nullable activatedAt;
@property (nonatomic, copy) NSDate * _Nullable renewedAt;
@property (nonatomic, copy) NSDate * _Nullable expiresAt;
@property (nonatomic, copy) NSDate * _Nullable startsAt;
@property (nonatomic) BOOL isLifetime;
@property (nonatomic, copy) NSString * _Nullable activeIntroductoryOfferType;
@property (nonatomic, copy) NSString * _Nullable activePromotionalOfferType;
@property (nonatomic) BOOL willRenew;
@property (nonatomic) BOOL isInGracePeriod;
@property (nonatomic, copy) NSDate * _Nullable unsubscribedAt;
@property (nonatomic, copy) NSDate * _Nullable billingIssueDetectedAt;
@property (nonatomic) BOOL isSandbox;
@property (nonatomic, copy) NSString * _Nullable vendorTransactionId;
@property (nonatomic, copy) NSString * _Nullable vendorOriginalTransactionId;
@property (nonatomic, copy) NSString * _Nullable cancellationReason;
@property (nonatomic) BOOL isRefund;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface SubscriptionInfoModel (SWIFT_EXTENSION(Adapty))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end



#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
